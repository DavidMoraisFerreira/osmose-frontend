#!/usr/bin/env python
# -*- coding: utf-8 -*-

#
# Copyright 2009 Christoph BÃ¶hme, Mitja Kleider
#
# This file is part of Openstreetbugs.
#
# Openstreetbugs is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Openstreetbugs is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Openstreetbugs. If not, see <http://www.gnu.org/licenses/>.
#

import cgi, re, sys, os
root_folder = os.environ["OSMOSE_ROOT"]
sys.path.append(root_folder)
from tools import utils

print "Content-type: text/javascript; Charset=UTF-8\n"

form = cgi.FieldStorage()

minlat = int(float(form.getfirst("b", "")) * 1000000)
maxlat = int(float(form.getfirst("t", "")) * 1000000)
minlon = int(float(form.getfirst("l", "")) * 1000000)
maxlon = int(float(form.getfirst("r", "")) * 1000000)

lat = int((minlat + maxlat) / 2)
lon = int((minlon + maxlon) / 2)

err_id = form.getvalue("item", "").split(",")
err_id = ",".join([str(int(x)) for x in err_id if x])

sqlbase  = """
SELECT dynpoi_marker.item,
       dynpoi_marker.source,
       dynpoi_marker.class,
       dynpoi_marker.elems,
       dynpoi_marker.subclass,
       dynpoi_marker.marker_id,
       dynpoi_marker.lat,
       dynpoi_marker.lon,
       dynpoi_class.title_fr as title_cur,
       dynpoi_class.title_fr as title_def,
       dynpoi_marker.subtitle_fr as subtitle_cur,
       dynpoi_marker.subtitle_fr as subtitle_def,
       dynpoi_marker.data,
       dynpoi_update_last.timestamp
FROM dynpoi_marker
INNER JOIN dynpoi_class
  ON dynpoi_marker.source=dynpoi_class.source AND dynpoi_marker.class=dynpoi_class.class
INNER JOIN dynpoi_update_last
  ON dynpoi_marker.source = dynpoi_update_last.source
WHERE (dynpoi_marker.lat BETWEEN %s AND %s) AND (dynpoi_marker.lon BETWEEN %s and %s) AND """

if err_id:
    sqlbase += "dynpoi_marker.item IN (%s) AND " % (err_id)

sqlbase += """
  dynpoi_update_last.timestamp > (now() - interval '3 months')
ORDER BY ABS(lat - %s)+ABS(lon - %s) ASC
LIMIT 100;"""

PgConn    = utils.get_dbconn()
PgCursor  = PgConn.cursor()
PgCursor.execute(sqlbase, (minlat, maxlat, minlon, maxlon, lat, lon))

num = 0
for res in PgCursor.fetchall():
    num += 1
    lat       = float(res["lat"]) / 1000000
    lon       = float(res["lon"]) / 1000000
    error_id  = "%d-%d-%d-%s" % (res["source"], res["class"], res["subclass"], res["elems"])
    title     = res["title_cur"]    or res["title_cur"]    or "no title.."
    subtitle  = res["subtitle_cur"] or res["subtitle_cur"] or ""
    b_date    = res["timestamp"] or ""
    item      = res["item"] or 0

    text      = title
    if subtitle:
        text += " - <br>" + subtitle
    print "putAJAXMarker('%s', %f, %f, '%s', '%s');" % (error_id, lon, lat, text, item)
